xInstalling Wagtail
==================

multipass launch bionic

sudo apt update

sudo apt install python3-pip

sudo pip3 install virtualenv

virtualenv nlpa

source nlpa/bin/activate


https://docs.wagtail.io/en/v2.12.3/getting_started/index.html

$ pip install -r requirements.txt
$ ./manage.py migrate
$ ./manage.py createsuperuser
add ALLOWED_HOSTS=["x.x.x.x"] in nlpa/settings/base.py
$ ./manage.py runserver

?? https://learnwagtail.com/tutorials/adding-user-authentication-registration-and-login-your-wagtail-website/

git init -b main
git add .
git commit -m 'first commit'
git config --global user.email info@timparkin.co.uk
git config --global user.name "Tim Parkin"
git config --global credential.helper store
git commit -m 'first commit'
git remote add origin https://github.com/timparkin/NLPA-Submissions
git remote -v
git push -u origin main




vi settings/base.py

  DATABASES = {
          'default': {
              'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
              'NAME': 'nlpa',                      # Or path to database file if using sqlite3.
              # The following settings are not used with sqlite3:
              'USER': 'nlpa',
              'PASSWORD': 'nlpa',
              'HOST': '127.0.0.1',                      # Empty for localhost through domain sockets or           '127.0.0.1' for localhost through TCP.
              'PORT': '',                      # Set to empty string for default.
      }
  }


sudo apt-get install libpq-dev python3-dev
pip install psycopg2
./manage.py makemigrations
./manage.py migrate
./manage.py createsuperuser
./manage.py runserver 0.0.0.0:8000

pip install django-storages
pip install boto3
pip freeze > requirements.txt

INSTALLED_APPS = [
    ...
    'storages',
    ...
]

AWS_STORAGE_BUCKET_NAME = '####'
AWS_ACCESS_KEY_ID = '####'
AWS_SECRET_ACCESS_KEY = '####'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME


FULL INSTALL

multipass launch 18.04 -m 2G -d 20G -n submit

sudo apt update
sudo apt install python3-pip postgresql postgresql-contrib libpq-dev python3-dev
sudo pip3 install virtualenv
virtualenv nlpa
source nlpa/bin/activate

sudo -u postgres createuser --interactive  --pwprompt
sudo -u postgres createdb nlpa
$ sudo su postgres
$ psql
..create database nlpa;
..alter role nlpa SET client_encoding TO 'utf8';
..alter role nlpa SET default_transaction_isolation TO 'read committed';
..alter role nlpa SET timezone TO 'UTC';
..grant all privileges on database nlpa to nlpa;
$ psql nlpa < nlpa_2021_09_23_07_00_am.pgdump

# in nlpa/settings/config.py set DEBUG=True, ALLOWED_HOSTS=<ip address>,


git clone https://github.com/timparkin/NLPA-Submissions.git
pip install -r requirements

# Replace "import cStringIO" with "from io import BytesIO as cStringIO"
# and remove print statements from
# /home/ubuntu/nlpa/lib/python3.6/site-packages/django_thumbs/db/models.py

# change DEBUG=False to True in config.py
sudo apt-get install nginx
pip3 install gunicorn psycopg2-binary

gunicorn --bind 0.0.0.0:8000 nlpa.wsgi


./manage.py makemigrations
./manage.py migrate
./manage.py createsuperuser



# if you do this again, try dropping the migrations

Don't forget to update users

from userauth.models import CustomUser as User, Year

users = User.objects.all()
for user in users:
    years = Year.objects.filter(user=user, year='2021')
	  if not years:
	      year = Year.objects.create(user=user, year='2021')
    		year.payment_status = user.payment_status
    		year.payment_plan = user.payment_plan
    		year.payment_upgrade_status = user.payment_upgrade_status
    		year.payment_upgrade_plan = user.payment_upgrade_plan
    		year.is_young_entrant = user.is_young_entrant
    		year.project_title_one = user.project_title_one
    		year.project_description_one = user.project_description_one
    		year.project_title_two = user.project_title_two
    		year.project_description_two = user.project_description_two
    		year.save()
    else:
        year.payment_status = ''
        etc

# Check user
from userauth.models import CustomUser as User, Year
user = User.objects.filter(email='info+20220505f@timparkin.co.uk')[0]
print(user.payment_status)
