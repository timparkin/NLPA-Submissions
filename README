Installing Wagtail
==================

multipass launch bionic

sudo apt update

sudo apt install python3-pip

sudo pip3 install virtualenv

virtualenv nlpa

source nlpa/bin/activate


https://docs.wagtail.io/en/v2.12.3/getting_started/index.html

$ pip install -r requirements.txt
$ ./manage.py migrate
$ ./manage.py createsuperuser
add ALLOWED_HOSTS=["x.x.x.x"] in nlpa/settings/base.py
$ ./manage.py runserver

?? https://learnwagtail.com/tutorials/adding-user-authentication-registration-and-login-your-wagtail-website/

git init -b main
git add .
git commit -m 'first commit'
git config --global user.email info@timparkin.co.uk
git config --global user.name "Tim Parkin"
git config --global credential.helper store
git commit -m 'first commit'
git remote add origin https://github.com/timparkin/NLPA-Submissions
git remote -v
git push -u origin main



migrating to postgresql

./manage.py dumpdata > db.json
sudo apt install postgresql postgresql-contrib

sudo apt install postgresql postgresql-contrib
sudo -u postgres createuser --interactive
sudo -u postgres createdb nlpa
psql> alter user nlpa with password nlpa

vi settings/base.py
  
  DATABASES = {
          'default': {
              'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
              'NAME': 'nlpa',                      # Or path to database file if using sqlite3.
              # The following settings are not used with sqlite3:
              'USER': 'nlpa',
              'PASSWORD': 'nlpa',
              'HOST': '127.0.0.1',                      # Empty for localhost through domain sockets or           '127.0.0.1' for localhost through TCP.
              'PORT': '',                      # Set to empty string for default.
      }
  }
  

sudo apt-get install libpq-dev python3-dev
pip install psycopg2
./manage.py makemigrations
./manage.py migrate
./manage.py createsuperuser
./manage.py runserver 0.0.0.0:8000

pip install django-storages
pip install boto3
pip freeze > requirements.txt

INSTALLED_APPS = [
    ...
    'storages',
    ...
]

AWS_STORAGE_BUCKET_NAME = '####'
AWS_ACCESS_KEY_ID = '####'
AWS_SECRET_ACCESS_KEY = '####'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME

looking at stripe checkout on this url
https://testdriven.io/blog/django-stripe-tutorial/

pip3 install django-widget-tweaks (pythoneatstail)

https://pypi.org/project/django-thumbnails/

Don't forget to install redis-server and pip install redis


